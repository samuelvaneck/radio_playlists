---
http_interactions:
- request:
    method: get
    uri: https://www.grootnieuwsradio.nl/muziek/playlist
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Fri, 30 Dec 2022 13:53:16 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Expires:
      - Fri, 30 Dec 2022 14:53:17 GMT
      Cache-Control:
      - max-age=3600
      X-Redirect-By:
      - WordPress
      Location:
      - https://www.grootnieuwsradio.nl/muziek/playlist/
      Content-Length:
      - '0'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Fri, 30 Dec 2022 13:53:17 GMT
- request:
    method: get
    uri: https://www.grootnieuwsradio.nl/muziek/playlist/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 Dec 2022 13:53:17 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Link:
      - "<https://www.grootnieuwsradio.nl/?p=16005>; rel=shortlink"
      - <https://www.grootnieuwsradio.nl/wp-json/>; rel="https://api.w.org/"
      - <https://www.grootnieuwsradio.nl/wp-json/wp/v2/pages/16005>; rel="alternate";
        type="application/json"
      Vary:
      - Accept-Encoding
      Content-Length:
      - '21817'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
<!DOCTYPE html>
<!--[if lt IE 7]><html class="no-js no-svg ie ie6 lt-ie9 lt-ie8 lt-ie7" lang="nl"> <![endif]-->
<!--[if IE 7]><html class="no-js no-svg ie ie7 lt-ie9 lt-ie8" lang="nl"> <![endif]-->
<!--[if IE 8]><html class="no-js no-svg ie ie8 lt-ie9" lang="nl"> <![endif]-->
<!--[if gt IE 8]><!--><html class="no-js no-svg" lang="nl"> <!--<![endif]-->

<head>
    <title>Playlist - Groot Nieuws Radio</title>
    <link rel="profile" href="http://gmpg.org/xfn/11">
    <link rel="pingback" href="https://www.grootnieuwsradio.nl/xmlrpc.php">
    <meta charset="UTF-8" />
    <meta name="description" content="">
    <link rel="stylesheet" href="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/style.css" type="text/css" media="screen" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
<script type="text/javascript">
var gform;gform||(document.addEventListener("gform_main_scripts_loaded",function(){gform.scriptsLoaded=!0}),window.addEventListener("DOMContentLoaded",function(){gform.domLoaded=!0}),gform={domLoaded:!1,scriptsLoaded:!1,initializeOnLoaded:function(o){gform.domLoaded&&gform.scriptsLoaded?o():!gform.domLoaded&&gform.scriptsLoaded?window.addEventListener("DOMContentLoaded",o):document.addEventListener("gform_main_scripts_loaded",o)},hooks:{action:{},filter:{}},addAction:function(o,n,r,t){gform.addHook("action",o,n,r,t)},addFilter:function(o,n,r,t){gform.addHook("filter",o,n,r,t)},doAction:function(o){gform.doHook("action",o,arguments)},applyFilters:function(o){return gform.doHook("filter",o,arguments)},removeAction:function(o,n){gform.removeHook("action",o,n)},removeFilter:function(o,n,r){gform.removeHook("filter",o,n,r)},addHook:function(o,n,r,t,i){null==gform.hooks[o][n]&&(gform.hooks[o][n]=[]);var e=gform.hooks[o][n];null==i&&(i=n+"_"+e.length),gform.hooks[o][n].push({tag:i,callable:r,priority:t=null==t?10:t})},doHook:function(n,o,r){var t;if(r=Array.prototype.slice.call(r,1),null!=gform.hooks[n][o]&&((o=gform.hooks[n][o]).sort(function(o,n){return o.priority-n.priority}),o.forEach(function(o){"function"!=typeof(t=o.callable)&&(t=window[t]),"action"==n?t.apply(null,r):r[0]=t.apply(null,r)})),"filter"==n)return r[0]},removeHook:function(o,n,t,i){var r;null!=gform.hooks[o][n]&&(r=(r=gform.hooks[o][n]).filter(function(o,n,r){return!!(null!=i&&i!=o.tag||null!=t&&t!=o.priority)}),gform.hooks[o][n]=r)}});
</script>

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="author" href="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/humans.txt" />
    <link rel="pingback" href="https://www.grootnieuwsradio.nl/xmlrpc.php" />
    <link rel="profile" href="http://gmpg.org/xfn/11">
    <meta name="format-detection" content="telephone=no">

    <!--[if lt IE 9]>
    <script src="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme/js/html5.js"></script>
    <![endif]-->
    <style>
	/* Custom BSA_PRO Styles */

	/* fonts */

	/* form */
	.bsaProOrderingForm {   }
	.bsaProInput input,
	.bsaProInput input[type='file'],
	.bsaProSelectSpace select,
	.bsaProInputsRight .bsaInputInner,
	.bsaProInputsRight .bsaInputInner label {   }
	.bsaProPrice  {  }
	.bsaProDiscount  {   }
	.bsaProOrderingForm .bsaProSubmit,
	.bsaProOrderingForm .bsaProSubmit:hover,
	.bsaProOrderingForm .bsaProSubmit:active {   }

	/* alerts */
	.bsaProAlert,
	.bsaProAlert > a,
	.bsaProAlert > a:hover,
	.bsaProAlert > a:focus {  }
	.bsaProAlertSuccess {  }
	.bsaProAlertFailed {  }

	/* stats */
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-b .ct-bar,
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-b .ct-line,
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-b .ct-point,
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-b .ct-slice.ct-donut { stroke: #673AB7 !important; }

	.bsaStatsWrapper  .ct-chart .ct-series.ct-series-a .ct-bar,
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-a .ct-line,
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-a .ct-point,
	.bsaStatsWrapper .ct-chart .ct-series.ct-series-a .ct-slice.ct-donut { stroke: #FBCD39 !important; }

	/* Custom CSS */
	</style><meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />

	<!-- This site is optimized with the Yoast SEO plugin v19.12 - https://yoast.com/wordpress/plugins/seo/ -->
	<link rel="canonical" href="https://www.grootnieuwsradio.nl/muziek/playlist/" />
	<meta property="og:locale" content="nl_NL" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="Playlist - Groot Nieuws Radio" />
	<meta property="og:description" content="Benieuwd welke artiest dat éne lied zingt? Of hoe dat nummer heet? Bekijk hier de playlist van Groot Nieuws Radio van de afgelopen 24 uur!" />
	<meta property="og:url" content="https://www.grootnieuwsradio.nl/muziek/playlist/" />
	<meta property="og:site_name" content="Groot Nieuws Radio" />
	<meta property="article:modified_time" content="2022-05-02T14:17:28+00:00" />
	<meta property="og:image" content="https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg" />
	<meta property="og:image:width" content="1492" />
	<meta property="og:image:height" content="932" />
	<meta property="og:image:type" content="image/jpeg" />
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:label1" content="Geschatte leestijd" />
	<meta name="twitter:data1" content="1 minuut" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebPage","@id":"https://www.grootnieuwsradio.nl/muziek/playlist/","url":"https://www.grootnieuwsradio.nl/muziek/playlist/","name":"Playlist - Groot Nieuws Radio","isPartOf":{"@id":"https://www.grootnieuwsradio.nl/#website"},"primaryImageOfPage":{"@id":"https://www.grootnieuwsradio.nl/muziek/playlist/#primaryimage"},"image":{"@id":"https://www.grootnieuwsradio.nl/muziek/playlist/#primaryimage"},"thumbnailUrl":"https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg","datePublished":"2020-04-14T11:13:58+00:00","dateModified":"2022-05-02T14:17:28+00:00","breadcrumb":{"@id":"https://www.grootnieuwsradio.nl/muziek/playlist/#breadcrumb"},"inLanguage":"nl","potentialAction":[{"@type":"ReadAction","target":["https://www.grootnieuwsradio.nl/muziek/playlist/"]}]},{"@type":"ImageObject","inLanguage":"nl","@id":"https://www.grootnieuwsradio.nl/muziek/playlist/#primaryimage","url":"https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg","contentUrl":"https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg","width":1492,"height":932,"caption":"Opwekking 2019"},{"@type":"BreadcrumbList","@id":"https://www.grootnieuwsradio.nl/muziek/playlist/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://www.grootnieuwsradio.nl/"},{"@type":"ListItem","position":2,"name":"Ontdek nieuwe muziek","item":"https://www.grootnieuwsradio.nl/muziek/"},{"@type":"ListItem","position":3,"name":"Playlist"}]},{"@type":"WebSite","@id":"https://www.grootnieuwsradio.nl/#website","url":"https://www.grootnieuwsradio.nl/","name":"Groot Nieuws Radio","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://www.grootnieuwsradio.nl/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"nl"}]}</script>
	<!-- / Yoast SEO plugin. -->


<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/14.0.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.grootnieuwsradio.nl\/wp-includes\/js\/wp-emoji-release.min.js?ver=62cb62b7e1fbe93521a2d9bb0381db26"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode,e=(p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0),i.toDataURL());return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(p&&p.fillText)switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([129777,127995,8205,129778,127999],[129777,127995,8203,129778,127999])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(e=t.source||{}).concatemoji?c(e.concatemoji):e.wpemoji&&e.twemoji&&(c(e.twemoji),c(e.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css' href='https://www.grootnieuwsradio.nl/wp-includes/css/dist/block-library/style.min.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='classic-theme-styles-css' href='https://www.grootnieuwsradio.nl/wp-includes/css/classic-themes.min.css?ver=1' type='text/css' media='all' />
<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
.wp-block-navigation a:where(:not(.wp-element-button)){color: inherit;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}
.wp-block-pullquote{font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='buy_sell_ads_pro_main_stylesheet-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/style.css?v=4.3.94&#038;ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='buy_sell_ads_pro_user_panel-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/user-panel.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='buy_sell_ads_pro_template_stylesheet-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/all.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='buy_sell_ads_pro_animate_stylesheet-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/animate.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='buy_sell_ads_pro_chart_stylesheet-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/chart.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='buy_sell_ads_pro_carousel_stylesheet-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/bsa.carousel.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='buy_sell_ads_pro_materialize_stylesheet-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/material-design.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='jquery-ui-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/css/asset/ui-datapicker.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='campaignsuite-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/campaignsuite/public/assets/app.css?ver=2.4.6' type='text/css' media='all' />
<link rel='stylesheet' id='main-styles-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/cookiebanner/frontend/assets/css/cookiebanner_front.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='app-css' href='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme/assets/base/css/app.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='gopublic-child-motor-css' href='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/css/app.css?ver=1.19.9' type='text/css' media='all' />
<link rel='stylesheet' id='fontawesome-all-css' href='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme/assets/base/fontawesome/fontawesome-all.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='wp_mailjet_subscribe_widget-widget-front-styles-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/mailjet-for-wordpress/src/widget/css/front-widget.css?ver=5.2.25' type='text/css' media='all' />
<link rel='stylesheet' id='jquery-lazyloadxt-spinner-css-css' href='//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/css/jquery.lazyloadxt.spinner.css?ver=62cb62b7e1fbe93521a2d9bb0381db26' type='text/css' media='all' />
<link rel='stylesheet' id='a3a3_lazy_load-css' href='//www.grootnieuwsradio.nl/wp-content/uploads/sass/a3_lazy_load.min.css?ver=1551368014' type='text/css' media='all' />
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/jquery/jquery.min.js?ver=3.6.1' id='jquery-core-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' id='thickbox-js-extra'>
/* <![CDATA[ */
var thickboxL10n = {"next":"Volgende >","prev":"< Vorige","image":"Afbeelding","of":"van","close":"Sluiten","noiframes":"Deze functie vereist inline-frames. Je hebt inline-frames uitgeschakeld of de browser ondersteunt ze niet.","loadingAnimation":"https:\/\/www.grootnieuwsradio.nl\/wp-includes\/js\/thickbox\/loadingAnimation.gif"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/thickbox/thickbox.js?ver=3.1-20121105' id='thickbox-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/underscore.min.js?ver=1.13.4' id='underscore-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/shortcode.min.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='shortcode-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-admin/js/media-upload.min.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='media-upload-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/js/script.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='buy_sell_ads_pro_js_script-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/js/jquery.viewportchecker.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='buy_sell_ads_pro_viewport_checker_js_script-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/js/chart.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='buy_sell_ads_pro_chart_js_script-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/js/bsa.carousel.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='buy_sell_ads_pro_carousel_js_script-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/bsa-plugin-pro-scripteo/frontend/js/jquery.simplyscroll.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='buy_sell_ads_pro_simply_scroll_js_script-js'></script>
<script type='text/javascript' id='campaignsuite-js-extra'>
/* <![CDATA[ */
var frontendajax = {"ajax_url":"https:\/\/www.grootnieuwsradio.nl\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/campaignsuite/public/assets/app.js?ver=2.4.6' id='campaignsuite-js'></script>
<script type='text/javascript' id='wp-util-js-extra'>
/* <![CDATA[ */
var _wpUtilSettings = {"ajax":{"url":"\/wp-admin\/admin-ajax.php"}};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/wp-util.min.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='wp-util-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/js/ajax.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='my-script-js'></script>
<link rel="https://api.w.org/" href="https://www.grootnieuwsradio.nl/wp-json/" /><link rel="alternate" type="application/json" href="https://www.grootnieuwsradio.nl/wp-json/wp/v2/pages/16005" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.grootnieuwsradio.nl/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.grootnieuwsradio.nl/wp-includes/wlwmanifest.xml" />

<link rel='shortlink' href='https://www.grootnieuwsradio.nl/?p=16005' />
<link rel="alternate" type="application/json+oembed" href="https://www.grootnieuwsradio.nl/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.grootnieuwsradio.nl%2Fmuziek%2Fplaylist%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://www.grootnieuwsradio.nl/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.grootnieuwsradio.nl%2Fmuziek%2Fplaylist%2F&#038;format=xml" />
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push(

{'gtm.start': new Date().getTime(),event:'gtm.js'}
);var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-KDNL9GD');</script>

<link rel="icon" href="https://www.grootnieuwsradio.nl/wp-content/uploads/2018/12/cropped-favicon-1-90x90.png" sizes="32x32" />
<link rel="icon" href="https://www.grootnieuwsradio.nl/wp-content/uploads/2018/12/cropped-favicon-1-300x300.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://www.grootnieuwsradio.nl/wp-content/uploads/2018/12/cropped-favicon-1-300x300.png" />
<meta name="msapplication-TileImage" content="https://www.grootnieuwsradio.nl/wp-content/uploads/2018/12/cropped-favicon-1-300x300.png" />


</head>


    <body class="page-template-default page page-id-16005 page-child parent-pageid-494 is-header-top is-header-transparent header--transparent">
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KDNL9GD"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>


    
<span class="waypoint-header"></span>

<header>
    <div id="header" class="header">
        <div class="header__top">
            <div class="expanded row">
                <div class="column">
                    <div class="header__top-bar">
                                                                        <div class="header--payoff-text">
                                <p>Groot Nieuws Radio</p>
                        </div>
                         

                                                                            <div class="header__secondarymenu">
                                <ul class="dropdown menu" data-dropdown-menu>
                                                                    </ul>
                            </div>
                                                
                    </div>
                </div>
            </div>
        </div>        
        <div class="expanded row mobile-hook">
            <div class="column">
                <div class="header__in">
                    <div class="header__start">
                        <div class="header__logo">
                                                        <a href="/">
                               <img class="header-logo" src="https://www.grootnieuwsradio.nl/wp-content/uploads/2018/12/logo-color.svg">
                               <img style="display: none" class="header-logo--white" src="https://www.grootnieuwsradio.nl/wp-content/uploads/2018/12/logo-white.svg">
                            </a>
                        </div>  

                        <div class="header__nav-toggler">
                            <div class="title-bar" data-responsive-toggle="main-menu" data-hide-for="large">
                                <button class="menu-icon" type="button" data-toggle="main-menu" aria-expanded="false">
                                    <span class="navbar-toggler-icon"></span>
                                </button>
                            </div>                                                 
                        </div>                                                 
                    </div>
                    
                                        <div class="header__menu">
                        <div class="menu-bar" id="main-menu">
                            <div class="header__menu--mobile">
                                <ul class="vertical menu accordion-menu" data-accordion-menu>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/programmas/">Programma’s</a>
                                                                                            <ul class="menu vertical nested">
                                                    <li class="nav-drop-item">
                                                        <a href="https://www.grootnieuwsradio.nl/programmas/">Programma’s</a>
                                                    </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gemist/">Groot Nieuws Gemist</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/podcast/">Podcast</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/denieuwemorgen/">De Nieuwe Morgen</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/blessings/">Blessings</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/brandstof/">Brandstof</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/bijjorieke/">Bij Jorieke</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/delunchroom/">De Lunchroom</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/backstage/">Backstage</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/dedagvanvandaag/">De Dag Van Vandaag</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/wens/">Wens</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/top-1008/">Top 1008</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programmagids/">Programmagids</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/heerlijkloflied/">’t Heerlijk Loflied</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/een-goede-zondag/">Een Goede Zondag</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/gebedsavond/">Gebedsavond</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/geloof-en-gezondheid/">Geloof en Gezondheid</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/kerkdienst/">Kerkdienst</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/op-weg-met-de-bijbel/">Op weg met de Bijbel</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/actueel/">Actueel</a>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/muziek/">Muziek</a>
                                                                                            <ul class="menu vertical nested">
                                                    <li class="nav-drop-item">
                                                        <a href="https://www.grootnieuwsradio.nl/muziek/">Muziek</a>
                                                    </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/playlist/">Playlist</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/">Spotify</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/inspiratie-voor-een-blessing/">Inspiratie voor een blessing</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/top-1008/">Top 1008</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/opwekkingtop100/">Opwekking Top 100</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/vriend/">Word vriend</a>
                                                                                            <ul class="menu vertical nested">
                                                    <li class="nav-drop-item">
                                                        <a href="https://www.grootnieuwsradio.nl/vriend/">Word vriend</a>
                                                    </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/?frequency=Monthly">Word vriend</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/">Geef een gift</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/verhoog-je-donatie/">Verhoog je donatie</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/periodiek-schenken/">Periodiek schenken</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/geef-een-wijziging-door/">Geef een wijziging door</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/collecte/">Collecteer in je kerk</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/vriend/nalatenschap/">Nalatenschap</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/winkel/">Winkel</a>
                                                                                            <ul class="menu vertical nested">
                                                    <li class="nav-drop-item">
                                                        <a href="https://www.grootnieuwsradio.nl/winkel/">Winkel</a>
                                                    </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/winkel/">Boeken, CD's, films</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/adverteren/">Adverteren</a>
                                                                                            <ul class="menu vertical nested">
                                                    <li class="nav-drop-item">
                                                        <a href="https://www.grootnieuwsradio.nl/adverteren/">Adverteren</a>
                                                    </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/">Alle mogelijkheden</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/businessclub/">Businessclub</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/partners/">Partners</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/leden-partners/">Leden &#038; partners</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/verkoopteam/">Verkoopteam</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/ontvang-meer-informatie/">Ontvang meer info</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/info/hoe-luister-ik-groot-nieuws-radio/">Info</a>
                                                                                            <ul class="menu vertical nested">
                                                    <li class="nav-drop-item">
                                                        <a href="https://www.grootnieuwsradio.nl/info/hoe-luister-ik-groot-nieuws-radio/">Info</a>
                                                    </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/hoe-luister-ik-groot-nieuws-radio/">Alle luisteropties</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/app/">Download de app</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/nonstop/">Non-stop</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/blijdeklanken/">Blijde Klanken</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/seven-fm/">Seven FM</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/info/over-groot-nieuws-radio/">Over dit radiostation</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/contact/">Contact</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/nieuwsbrief/">Nieuwsbrief</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/vacatures/">Vacatures</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/veelgestelde-vragen/">Veelgestelde vragen</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                    </ul>

                                <div class="header--widget-mobile">
                                    <div id="gopublicsearch-2" class=" search "><form role="search" method="get" id="searchform" class="searchform" action="https://www.grootnieuwsradio.nl/">
            <div>               
                <input type="text" value="" name="s" id="s" placeholder="Wat zoek je…" />
                <input type="submit" id="searchsubmit" value="Zoeken" />
            </div>
        </form></div><div id="gopublicsocialicons-2" class="small-12 medium-12 large-12  social_icons_widget columns ">
        <div class="header__inline-block">
            <ul class="list-social">
                <li class="list-item">
                    <a href="https://www.facebook.com/GrootNieuwsRadio" target="_blank"><i class="fab fa-facebook-f"></i></a>
                </li>
                <li class="list-item">
                    <a href="https://twitter.com/grootnieuwsnl" target="_blank"><i class="fab fa-twitter"></i></a>
                </li>
                <li class="list-item">
                    <a href="https://www.instagram.com/grootnieuwsradio/" target="_blank"><i class="fab fa-instagram"></i></a>
                </li>
                <li class="list-item">
                    <a href="https://api.whatsapp.com/send/?phone=31627065112" target="_blank"><i class="fab fa-whatsapp"></i></a>
                </li>

                <li class="list-item">
                    <a href="http://www.youtube.com/grootnieuwsradio" target="_blank"><i class="fab fa-youtube"></i></a>
                </li>
            </ul>            
        </div>
        
        </div>
                                </div>                                  
                            </div>
                            <div class="header__menu--divide">
                                <ul class="dropdown menu" data-dropdown-menu>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/programmas/">Programma’s</a>
                                                                                            <ul class="menu sub-menu nav-drop">
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gemist/">Groot Nieuws Gemist</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/podcast/">Podcast</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/denieuwemorgen/">De Nieuwe Morgen</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/blessings/">Blessings</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/brandstof/">Brandstof</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/bijjorieke/">Bij Jorieke</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/delunchroom/">De Lunchroom</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/backstage/">Backstage</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/dedagvanvandaag/">De Dag Van Vandaag</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/wens/">Wens</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/top-1008/">Top 1008</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programmagids/">Programmagids</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/heerlijkloflied/">’t Heerlijk Loflied</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/een-goede-zondag/">Een Goede Zondag</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/gebedsavond/">Gebedsavond</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/geloof-en-gezondheid/">Geloof en Gezondheid</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/kerkdienst/">Kerkdienst</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/programma/op-weg-met-de-bijbel/">Op weg met de Bijbel</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/actueel/">Actueel</a>
                                                                                    
                                        </li>
                                                                    </ul>
                                <ul class="dropdown menu" data-dropdown-menu>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/muziek/">Muziek</a>
                                                                                            <ul class="menu sub-menu nav-drop">
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/playlist/">Playlist</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/">Spotify</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/inspiratie-voor-een-blessing/">Inspiratie voor een blessing</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/top-1008/">Top 1008</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/muziek/opwekkingtop100/">Opwekking Top 100</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/vriend/">Word vriend</a>
                                                                                            <ul class="menu sub-menu nav-drop">
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/?frequency=Monthly">Word vriend</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/">Geef een gift</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/verhoog-je-donatie/">Verhoog je donatie</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/periodiek-schenken/">Periodiek schenken</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/geef-een-wijziging-door/">Geef een wijziging door</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/gift/collecte/">Collecteer in je kerk</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/vriend/nalatenschap/">Nalatenschap</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/winkel/">Winkel</a>
                                                                                            <ul class="menu sub-menu nav-drop">
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/winkel/">Boeken, CD's, films</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/adverteren/">Adverteren</a>
                                                                                            <ul class="menu sub-menu nav-drop">
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/">Alle mogelijkheden</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/businessclub/">Businessclub</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/partners/">Partners</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/leden-partners/">Leden &#038; partners</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/verkoopteam/">Verkoopteam</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/adverteren/ontvang-meer-informatie/">Ontvang meer info</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                                                            <li class="nav-item">
                                            <a href="https://www.grootnieuwsradio.nl/info/hoe-luister-ik-groot-nieuws-radio/">Info</a>
                                                                                            <ul class="menu sub-menu nav-drop">
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/hoe-luister-ik-groot-nieuws-radio/">Alle luisteropties</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/app/">Download de app</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/nonstop/">Non-stop</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/blijdeklanken/">Blijde Klanken</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/seven-fm/">Seven FM</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/info/over-groot-nieuws-radio/">Over dit radiostation</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/contact/">Contact</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/nieuwsbrief/">Nieuwsbrief</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/vacatures/">Vacatures</a>
                                                        </li>
                                                                                                            <li class="nav-drop-item">
                                                            <a href="https://www.grootnieuwsradio.nl/veelgestelde-vragen/">Veelgestelde vragen</a>
                                                        </li>
                                                                                                    </ul>
                                                                                    
                                        </li>
                                    
                                    <li class="nav-item has-submenu nav-item--search" data-menuindex="search"><button id="search-toggle" class="search--button"></button></li>
                                </ul>

                                                                                                    <div class="header__secondarymenu--mobile">
                                        <ul class="dropdown menu" data-dropdown-menu>
                                                                                    </ul>
                                    </div>
                                                            
                            </div>                      
                        </div>
                    </div>

                                        <div class="header__end">
                        <div class="header--widgets">
                            <div id="search-5" class="widget_search"><form role="search" method="get" id="searchform" class="searchform" action="https://www.grootnieuwsradio.nl/">
            <div>               
                <input type="text" value="" name="s" id="s" placeholder="Wat zoek je…" />
                <input type="submit" id="searchsubmit" value="Zoeken" />
            </div>
        </form></div>
                        </div>
                    </div>

                   

                </div>
            </div>        
        </div>
        <div class="header__bottom">
            <div class="expanded row">
                <div class="column">                
                        <div class="nav-drop__body">
                            <div class="nav-drop" data-childrenindex="search">
                                <div id="gopublicsearch-3" class=" search "><form role="search" method="get" id="searchform" class="searchform" action="https://www.grootnieuwsradio.nl/">
            <div>               
                <input type="text" value="" name="s" id="s" placeholder="Wat zoek je…" />
                <input type="submit" id="searchsubmit" value="Zoeken" />
            </div>
        </form></div>
                            </div>   
                        </div>                               
                </div>
            </div>
        </div> 
    </div>       
</header>




                        <div class="banner banner-large" data-interchange="[https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg, small], [https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg, medium], [https://www.grootnieuwsradio.nl/wp-content/uploads/2019/07/gnropwekking2019-3-e1562588708285.jpg, large]">
                        <div class="row">
                    <div class="columns">

                        <div class="banner__in">
                            <div class="banner__body">
                                <div class="banner--description"><p>Playlist</p>
</div>

                                
                                                            </div>
                        </div>

                    </div>

                    <div class="overlay overlay__left"></div>
                    <div class="overlay overlay__right"></div>
                </div>
            </div>
        
    <main role="main" id="main">
        
        <div class="row">
            <div id="anchor-sticky" class="columns large-12">
                                        
                    <article class="article">
                        <div class="page-content__body">
                            <p><span class="default_intro">Benieuwd welke artiest dat éne lied zingt? Of hoe dat nummer heet? Bekijk hier de playlist van Groot Nieuws Radio van de afgelopen 24 uur!</span></p>

<div class="playlist">
  <div class="row head">
    <div class="columns large-2">
      Tijdstip
    </div>
    <div class="columns large-5">
      Artiest
    </div>
    <div class="columns large-5">
      Titel
    </div>
  </div>

  <div class="items">
      <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:52</span>
      </div>
      <div class="columns large-5">
        Marcel &amp;amp; Lydia Zimmer
      </div>
      <div class="columns large-5">
        Symfonie
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:47</span>
      </div>
      <div class="columns large-5">
        Whitecross
      </div>
      <div class="columns large-5">
        In The Kingdom
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:43</span>
      </div>
      <div class="columns large-5">
        Reyer en Mirjam Kerkhof
      </div>
      <div class="columns large-5">
        Zegen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:39</span>
      </div>
      <div class="columns large-5">
        Skillet
      </div>
      <div class="columns large-5">
        Stars
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:33</span>
      </div>
      <div class="columns large-5">
        Kinga Ban
      </div>
      <div class="columns large-5">
        Geboren
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:29</span>
      </div>
      <div class="columns large-5">
        Brian &amp;amp; Jenn Johnson
      </div>
      <div class="columns large-5">
        For The One
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:25</span>
      </div>
      <div class="columns large-5">
        Andre van Zyl
      </div>
      <div class="columns large-5">
        In De Hemel Is De Heer
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:20</span>
      </div>
      <div class="columns large-5">
        Chris Tomlin
      </div>
      <div class="columns large-5">
        Our God
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:16</span>
      </div>
      <div class="columns large-5">
        Psalmen Voor Nu
      </div>
      <div class="columns large-5">
        Ik Val Niet Uit Zijn Hand
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:10</span>
      </div>
      <div class="columns large-5">
        Newsboys
      </div>
      <div class="columns large-5">
        God&#039;s Not Dead
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>14:06</span>
      </div>
      <div class="columns large-5">
        Charlotte
      </div>
      <div class="columns large-5">
        Love Is The Answer
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:53</span>
      </div>
      <div class="columns large-5">
        Lars Gerfen
      </div>
      <div class="columns large-5">
        Ik Zie Uit Naar De Morgen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:49</span>
      </div>
      <div class="columns large-5">
        Phil Wickham
      </div>
      <div class="columns large-5">
        Your Love Awakens Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:41</span>
      </div>
      <div class="columns large-5">
        Opwekking Band
      </div>
      <div class="columns large-5">
        774 Ik Verlang Naar Jezus
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:33</span>
      </div>
      <div class="columns large-5">
        Christian Verwoerd
      </div>
      <div class="columns large-5">
        Kom Naar Huis
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:28</span>
      </div>
      <div class="columns large-5">
        Casting Crowns &amp;amp; Matthew West
      </div>
      <div class="columns large-5">
        Nobody
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:24</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Til Me Nu Dan Maar Op
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:18</span>
      </div>
      <div class="columns large-5">
        Amy Grant
      </div>
      <div class="columns large-5">
        Walk On Water
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:14</span>
      </div>
      <div class="columns large-5">
        Kees Kraayenoord &amp;amp; Mozaiek0318
      </div>
      <div class="columns large-5">
        Wie Kan Zich Meten Met U
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>13:06</span>
      </div>
      <div class="columns large-5">
        Jesus Culture
      </div>
      <div class="columns large-5">
        Rooftops
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:54</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Aan Uw Tafel
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:50</span>
      </div>
      <div class="columns large-5">
        For King &amp;amp; Country
      </div>
      <div class="columns large-5">
        Burn The Ships
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:43</span>
      </div>
      <div class="columns large-5">
        Adem Project
      </div>
      <div class="columns large-5">
        Maan En Sterren
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:41</span>
      </div>
      <div class="columns large-5">
        Trinity
      </div>
      <div class="columns large-5">
        Fiesta Celestial
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:35</span>
      </div>
      <div class="columns large-5">
        Talitha Nawijn
      </div>
      <div class="columns large-5">
        Welkom Thuis
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:31</span>
      </div>
      <div class="columns large-5">
        Keith Green
      </div>
      <div class="columns large-5">
        Create In Me A Clean Heart
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:21</span>
      </div>
      <div class="columns large-5">
        Eline Bakker
      </div>
      <div class="columns large-5">
        De Zegen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:17</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith
      </div>
      <div class="columns large-5">
        Sing Again
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:11</span>
      </div>
      <div class="columns large-5">
        LEV
      </div>
      <div class="columns large-5">
        Uw Liefde Wint Elke Strijd
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>12:06</span>
      </div>
      <div class="columns large-5">
        Reyer &amp;amp; Ann Michelle Lee
      </div>
      <div class="columns large-5">
        Voldoende Voor Vandaag
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:50</span>
      </div>
      <div class="columns large-5">
        Delirious?
      </div>
      <div class="columns large-5">
        History Maker
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:48</span>
      </div>
      <div class="columns large-5">
        Robin Mark
      </div>
      <div class="columns large-5">
        When It&#039;s All Said And Done
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:42</span>
      </div>
      <div class="columns large-5">
        Martin Brand
      </div>
      <div class="columns large-5">
        Wil Je Van Me Houden
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:38</span>
      </div>
      <div class="columns large-5">
        Marie Miller
      </div>
      <div class="columns large-5">
        You&#039;re Not Alone
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:27</span>
      </div>
      <div class="columns large-5">
        Paul Cherryseed
      </div>
      <div class="columns large-5">
        Roaming Stone
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:21</span>
      </div>
      <div class="columns large-5">
        Kees Kraayenoord
      </div>
      <div class="columns large-5">
        Groot Is Uw Trouw, O Heer
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:15</span>
      </div>
      <div class="columns large-5">
        Chris Tomlin
      </div>
      <div class="columns large-5">
        How Great Is Our God
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:11</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Opgestaan
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>11:07</span>
      </div>
      <div class="columns large-5">
        Steve Green
      </div>
      <div class="columns large-5">
        God And God Alone
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:52</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Wat Gaan De Wolken Snel
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:48</span>
      </div>
      <div class="columns large-5">
        Matt Maher
      </div>
      <div class="columns large-5">
        Your Grace Is Enough / Here I Am Lord
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:44</span>
      </div>
      <div class="columns large-5">
        Elly &amp;amp; Rikkert
      </div>
      <div class="columns large-5">
        De Leeuw Van Juda
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:40</span>
      </div>
      <div class="columns large-5">
        Matt Redman
      </div>
      <div class="columns large-5">
        It Is Well With My Soul
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:38</span>
      </div>
      <div class="columns large-5">
        Gerald Troost
      </div>
      <div class="columns large-5">
        Witte Vlag
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:31</span>
      </div>
      <div class="columns large-5">
        Rend Collective
      </div>
      <div class="columns large-5">
        Yahweh
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:27</span>
      </div>
      <div class="columns large-5">
        Schrijvers Voor Gerechtigheid
      </div>
      <div class="columns large-5">
        Vluchtkerk
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:23</span>
      </div>
      <div class="columns large-5">
        The Bowery &amp;amp; G-Roots
      </div>
      <div class="columns large-5">
        Stone By Stone
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:13</span>
      </div>
      <div class="columns large-5">
        Here Be Lions &amp;amp; Darlene Zschech
      </div>
      <div class="columns large-5">
        I Speak Jesus
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>10:09</span>
      </div>
      <div class="columns large-5">
        Psalmen Voor Nu
      </div>
      <div class="columns large-5">
        Uit De Diepten
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:56</span>
      </div>
      <div class="columns large-5">
        Cory Asbury
      </div>
      <div class="columns large-5">
        Reckless Love
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:52</span>
      </div>
      <div class="columns large-5">
        Opwekking Band met Talitha Nawijn
      </div>
      <div class="columns large-5">
        705 Toon Mijn Liefde
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:48</span>
      </div>
      <div class="columns large-5">
        Petra
      </div>
      <div class="columns large-5">
        We Need Jesus
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:39</span>
      </div>
      <div class="columns large-5">
        Remco Hakkert
      </div>
      <div class="columns large-5">
        Gebed Voor Mijn Kinderen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:35</span>
      </div>
      <div class="columns large-5">
        Lauren Daigle
      </div>
      <div class="columns large-5">
        Tremble
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:31</span>
      </div>
      <div class="columns large-5">
        Ralph van Manen
      </div>
      <div class="columns large-5">
        Met Mijn Ogen Dicht
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:25</span>
      </div>
      <div class="columns large-5">
        The Afters
      </div>
      <div class="columns large-5">
        Well Done
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:21</span>
      </div>
      <div class="columns large-5">
        Mozaiek Worship &amp;amp; Kees Kraayenoord
      </div>
      <div class="columns large-5">
        Elke Traan Is Een Gebed
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:17</span>
      </div>
      <div class="columns large-5">
        Casting Crowns
      </div>
      <div class="columns large-5">
        Oh My Soul
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:10</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Gebed Om Zegen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>09:06</span>
      </div>
      <div class="columns large-5">
        For King &amp;amp; Country
      </div>
      <div class="columns large-5">
        Amen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:54</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Uw Liefde Laat Nooit Los
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:50</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith &amp;amp; Skye Reedy
      </div>
      <div class="columns large-5">
        Agnus Dei
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:45</span>
      </div>
      <div class="columns large-5">
        Reni &amp;amp; Elisa
      </div>
      <div class="columns large-5">
        Wij Hebben U Lief
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:41</span>
      </div>
      <div class="columns large-5">
        Stryper
      </div>
      <div class="columns large-5">
        To Hell With The Devil
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:35</span>
      </div>
      <div class="columns large-5">
        Christian Verwoerd &amp;amp; Erika de With
      </div>
      <div class="columns large-5">
        Mijn Waarde Ligt Niet In Bezit
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:31</span>
      </div>
      <div class="columns large-5">
        Trinity
      </div>
      <div class="columns large-5">
        May You Have
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:27</span>
      </div>
      <div class="columns large-5">
        Delise
      </div>
      <div class="columns large-5">
        Storm Op Het Meer
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:22</span>
      </div>
      <div class="columns large-5">
        Third Day
      </div>
      <div class="columns large-5">
        When The Rain Comes
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:16</span>
      </div>
      <div class="columns large-5">
        Eline Bakker, Kees Kraayenoord &amp;amp; Reyer
      </div>
      <div class="columns large-5">
        Wees Verhoogd
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:10</span>
      </div>
      <div class="columns large-5">
        Phil Wickham
      </div>
      <div class="columns large-5">
        It&#039;s Always Been You
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>08:06</span>
      </div>
      <div class="columns large-5">
        Annemieke Koelewijn &amp;amp; Ralph van Manen
      </div>
      <div class="columns large-5">
        642 De Rivier
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:51</span>
      </div>
      <div class="columns large-5">
        Don Francisco
      </div>
      <div class="columns large-5">
        Adam, Where Are You
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:45</span>
      </div>
      <div class="columns large-5">
        LEV
      </div>
      <div class="columns large-5">
        God Van Licht
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:41</span>
      </div>
      <div class="columns large-5">
        Sandi Patty
      </div>
      <div class="columns large-5">
        Via Dolorosa
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:31</span>
      </div>
      <div class="columns large-5">
        Matt Maher
      </div>
      <div class="columns large-5">
        Run To The Father
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:25</span>
      </div>
      <div class="columns large-5">
        Reisgenoten
      </div>
      <div class="columns large-5">
        Wat De Toekomst Brengen Moge
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:21</span>
      </div>
      <div class="columns large-5">
        Jaci Velasquez
      </div>
      <div class="columns large-5">
        You&#039;re My God
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:19</span>
      </div>
      <div class="columns large-5">
        Lars Gerfen
      </div>
      <div class="columns large-5">
        Petrus
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:14</span>
      </div>
      <div class="columns large-5">
        Rend Collective
      </div>
      <div class="columns large-5">
        You Will Never Run
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:10</span>
      </div>
      <div class="columns large-5">
        Marjolein Keijzer &amp;amp; Delise
      </div>
      <div class="columns large-5">
        Hoe Mooi
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>07:06</span>
      </div>
      <div class="columns large-5">
        Skillet
      </div>
      <div class="columns large-5">
        Refuge
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:52</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Maranatha
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:46</span>
      </div>
      <div class="columns large-5">
        dc Talk
      </div>
      <div class="columns large-5">
        In The Light
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:40</span>
      </div>
      <div class="columns large-5">
        Irma Dee
      </div>
      <div class="columns large-5">
        Verloren En Gevonden
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:29</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Staak De Strijd
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:25</span>
      </div>
      <div class="columns large-5">
        Bob Carlisle
      </div>
      <div class="columns large-5">
        Butterfly Kisses
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:17</span>
      </div>
      <div class="columns large-5">
        Marcel &amp;amp; Lydia Zimmer
      </div>
      <div class="columns large-5">
        Mijn Hulp Is Van U Heer
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:15</span>
      </div>
      <div class="columns large-5">
        Casting Crowns
      </div>
      <div class="columns large-5">
        What If I Gave Everything
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>06:10</span>
      </div>
      <div class="columns large-5">
        Elly &amp;amp; Rikkert
      </div>
      <div class="columns large-5">
        Onze Vader
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:56</span>
      </div>
      <div class="columns large-5">
        Lucy Grimble
      </div>
      <div class="columns large-5">
        Keeper
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:44</span>
      </div>
      <div class="columns large-5">
        Mozaiek Worship, Kees Kraayenoord &amp;amp; Wyke Bokma
      </div>
      <div class="columns large-5">
        Onze Schuilplaats Is God
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:33</span>
      </div>
      <div class="columns large-5">
        Hillsong Worship
      </div>
      <div class="columns large-5">
        Who You Say I Am
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:25</span>
      </div>
      <div class="columns large-5">
        NewWorldSon
      </div>
      <div class="columns large-5">
        Learning To Be The Light
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:21</span>
      </div>
      <div class="columns large-5">
        LEV
      </div>
      <div class="columns large-5">
        Nog Altijd Wie U Was
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:17</span>
      </div>
      <div class="columns large-5">
        Plumb
      </div>
      <div class="columns large-5">
        In My Arms
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:13</span>
      </div>
      <div class="columns large-5">
        Tim Timmons
      </div>
      <div class="columns large-5">
        Already Loved
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:09</span>
      </div>
      <div class="columns large-5">
        Christian Verwoerd &amp;amp; Erika de With
      </div>
      <div class="columns large-5">
        Zoals Het Was
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:05</span>
      </div>
      <div class="columns large-5">
        Rebecca St. James
      </div>
      <div class="columns large-5">
        Psalm 139
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>05:03</span>
      </div>
      <div class="columns large-5">
        Lauren Daigle
      </div>
      <div class="columns large-5">
        Hold On To Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:56</span>
      </div>
      <div class="columns large-5">
        Eline Bakker &amp;amp; Dwight Dissels
      </div>
      <div class="columns large-5">
        Alles Nieuw
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:52</span>
      </div>
      <div class="columns large-5">
        Steffany Gretzinger
      </div>
      <div class="columns large-5">
        Out Of Hiding
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:48</span>
      </div>
      <div class="columns large-5">
        Coen van den Heuvel &amp;amp; Reni Kraayenoord
      </div>
      <div class="columns large-5">
        Kijk Naar Mij
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:44</span>
      </div>
      <div class="columns large-5">
        Sheila Walsh
      </div>
      <div class="columns large-5">
        Jesus King Of Angels
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:40</span>
      </div>
      <div class="columns large-5">
        Elbert Smelt &amp;amp; Kinga Ban
      </div>
      <div class="columns large-5">
        Leef Met Volle Teugen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:36</span>
      </div>
      <div class="columns large-5">
        Hannah Kerr
      </div>
      <div class="columns large-5">
        Same God
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:32</span>
      </div>
      <div class="columns large-5">
        Solveig Leithaug
      </div>
      <div class="columns large-5">
        When She Plays
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:28</span>
      </div>
      <div class="columns large-5">
        Rachael Lampa &amp;amp; Toby Mac
      </div>
      <div class="columns large-5">
        Perfectly Loved
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:26</span>
      </div>
      <div class="columns large-5">
        Lucas Kramer
      </div>
      <div class="columns large-5">
        Wanneer U Met Mij Bent
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:19</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith
      </div>
      <div class="columns large-5">
        Take Me Over
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:15</span>
      </div>
      <div class="columns large-5">
        Sound Of David
      </div>
      <div class="columns large-5">
        Vrijer Dan Gedacht
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:11</span>
      </div>
      <div class="columns large-5">
        Hillsong United
      </div>
      <div class="columns large-5">
        Touch The Sky
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:09</span>
      </div>
      <div class="columns large-5">
        Julie Miller
      </div>
      <div class="columns large-5">
        Broken Things
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:05</span>
      </div>
      <div class="columns large-5">
        The Psalm Project
      </div>
      <div class="columns large-5">
        Ik Dank U Voor Het Leven
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>04:03</span>
      </div>
      <div class="columns large-5">
        Reuben Morgan
      </div>
      <div class="columns large-5">
        Still
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:57</span>
      </div>
      <div class="columns large-5">
        Reni &amp;amp; Elisa
      </div>
      <div class="columns large-5">
        Vertrouwen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:53</span>
      </div>
      <div class="columns large-5">
        Kari Jobe
      </div>
      <div class="columns large-5">
        Be Still
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:51</span>
      </div>
      <div class="columns large-5">
        Jordan Feliz
      </div>
      <div class="columns large-5">
        Next To Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:47</span>
      </div>
      <div class="columns large-5">
        De Oden Van Salomo met Suzan Paas
      </div>
      <div class="columns large-5">
        De Weg
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:40</span>
      </div>
      <div class="columns large-5">
        Matt Redman
      </div>
      <div class="columns large-5">
        10,000 Reasons
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:36</span>
      </div>
      <div class="columns large-5">
        Mozaiek Worship
      </div>
      <div class="columns large-5">
        Een Hemels Vuur
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:32</span>
      </div>
      <div class="columns large-5">
        Shawn McDonald
      </div>
      <div class="columns large-5">
        Don&#039;t Give Up
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:28</span>
      </div>
      <div class="columns large-5">
        Phil Wickham
      </div>
      <div class="columns large-5">
        Hymn Of Heaven
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:24</span>
      </div>
      <div class="columns large-5">
        Delise
      </div>
      <div class="columns large-5">
        Kleine Dingen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:20</span>
      </div>
      <div class="columns large-5">
        Jon Foreman
      </div>
      <div class="columns large-5">
        The Mountain
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:18</span>
      </div>
      <div class="columns large-5">
        Matt Papa
      </div>
      <div class="columns large-5">
        Lord From Sorrows Deep I Call
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:14</span>
      </div>
      <div class="columns large-5">
        Joke Buis
      </div>
      <div class="columns large-5">
        Leer Mij Uw Weg, O Heer
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:11</span>
      </div>
      <div class="columns large-5">
        PFR
      </div>
      <div class="columns large-5">
        That Kind Of Love
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:07</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Altijd Nog Wel Ergens Halleluja
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>03:03</span>
      </div>
      <div class="columns large-5">
        Lauren Daigle
      </div>
      <div class="columns large-5">
        Once And For All
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:57</span>
      </div>
      <div class="columns large-5">
        Brian Doerksen
      </div>
      <div class="columns large-5">
        Everlasting Arms
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:49</span>
      </div>
      <div class="columns large-5">
        Helena Maria
      </div>
      <div class="columns large-5">
        Rise Up
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:44</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Bij U Is De Bron
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:42</span>
      </div>
      <div class="columns large-5">
        Keith &amp;amp; Kristyn Getty
      </div>
      <div class="columns large-5">
        My Heart Is Filled With Thankfulness
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:38</span>
      </div>
      <div class="columns large-5">
        Ralph van Manen
      </div>
      <div class="columns large-5">
        Breath Of Heaven
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:32</span>
      </div>
      <div class="columns large-5">
        Vertical Worship
      </div>
      <div class="columns large-5">
        One And Only Jesus
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:28</span>
      </div>
      <div class="columns large-5">
        Reyer
      </div>
      <div class="columns large-5">
        Ik Weet Hoe Goed Mijn God Is
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:24</span>
      </div>
      <div class="columns large-5">
        Philippa Hanna
      </div>
      <div class="columns large-5">
        Something Better
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:18</span>
      </div>
      <div class="columns large-5">
        Tim Timmons &amp;amp; Tammi Haddon
      </div>
      <div class="columns large-5">
        You Never Let Go
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:14</span>
      </div>
      <div class="columns large-5">
        Woorden Van Waarde met Marieke Sleurink
      </div>
      <div class="columns large-5">
        Zoek Rust Mijn Ziel
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:09</span>
      </div>
      <div class="columns large-5">
        Greg Long
      </div>
      <div class="columns large-5">
        Faith Can Light A Candle
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:05</span>
      </div>
      <div class="columns large-5">
        Chris Tomlin &amp;amp; Lady A.
      </div>
      <div class="columns large-5">
        Who You Are To Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>02:03</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith
      </div>
      <div class="columns large-5">
        Be Still My Soul
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:57</span>
      </div>
      <div class="columns large-5">
        Casting Crowns
      </div>
      <div class="columns large-5">
        Who Am I
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:53</span>
      </div>
      <div class="columns large-5">
        Opwekking Band met Gezina van den Bos
      </div>
      <div class="columns large-5">
        838 Proef En Zie
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:47</span>
      </div>
      <div class="columns large-5">
        Cindy Morgan
      </div>
      <div class="columns large-5">
        Bring Balloons
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:45</span>
      </div>
      <div class="columns large-5">
        The Psalm Project
      </div>
      <div class="columns large-5">
        God Van Liefde, God Van Trouw
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:41</span>
      </div>
      <div class="columns large-5">
        Andrew Ripp
      </div>
      <div class="columns large-5">
        Jericho
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:39</span>
      </div>
      <div class="columns large-5">
        Psalmen Voor Nu
      </div>
      <div class="columns large-5">
        Gefeliciteerd
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:35</span>
      </div>
      <div class="columns large-5">
        We Are Messengers
      </div>
      <div class="columns large-5">
        Wholehearted
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:30</span>
      </div>
      <div class="columns large-5">
        Kinga Ban
      </div>
      <div class="columns large-5">
        Life @ Opwekking 234 Bron Van Leven
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:26</span>
      </div>
      <div class="columns large-5">
        Plumb
      </div>
      <div class="columns large-5">
        Somebody Loves You
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:22</span>
      </div>
      <div class="columns large-5">
        Paul Baloche
      </div>
      <div class="columns large-5">
        What Can I Do
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:18</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Ik Leef
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:08</span>
      </div>
      <div class="columns large-5">
        We The Kingdom
      </div>
      <div class="columns large-5">
        God Is On The Throne
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>01:04</span>
      </div>
      <div class="columns large-5">
        Reni &amp;amp; Elisa
      </div>
      <div class="columns large-5">
        Schuilplaats
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:56</span>
      </div>
      <div class="columns large-5">
        Natalie Grant
      </div>
      <div class="columns large-5">
        Song To The King
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:51</span>
      </div>
      <div class="columns large-5">
        LEV
      </div>
      <div class="columns large-5">
        Onzichtbare Armen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:47</span>
      </div>
      <div class="columns large-5">
        Kari Jobe
      </div>
      <div class="columns large-5">
        My Beloved
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:41</span>
      </div>
      <div class="columns large-5">
        Eline Bakker
      </div>
      <div class="columns large-5">
        Jezus Overwinnaar
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:39</span>
      </div>
      <div class="columns large-5">
        Matt Maher &amp;amp; Lizzie Morgan
      </div>
      <div class="columns large-5">
        Leaning
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:35</span>
      </div>
      <div class="columns large-5">
        Sharon Kips
      </div>
      <div class="columns large-5">
        Onvoorwaardelijk
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:27</span>
      </div>
      <div class="columns large-5">
        Hillsong Worship &amp;amp; Brooke Ligertwood
      </div>
      <div class="columns large-5">
        What A Beautiful Name
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:23</span>
      </div>
      <div class="columns large-5">
        Gerald Troost
      </div>
      <div class="columns large-5">
        Bovennatuurlijk
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:14</span>
      </div>
      <div class="columns large-5">
        Elise Mannah
      </div>
      <div class="columns large-5">
        Zij Intrigeert Mij
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:12</span>
      </div>
      <div class="columns large-5">
        MercyMe
      </div>
      <div class="columns large-5">
        Word Of God Speak
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:08</span>
      </div>
      <div class="columns large-5">
        Sarah Kroger
      </div>
      <div class="columns large-5">
        A Thousand Thank Yous
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        30-12-2022 <span>00:06</span>
      </div>
      <div class="columns large-5">
        Reyer
      </div>
      <div class="columns large-5">
        Prins Van De Vrede
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:58</span>
      </div>
      <div class="columns large-5">
        Jordan Feliz
      </div>
      <div class="columns large-5">
        Wounds
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:54</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Psalm 98
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:45</span>
      </div>
      <div class="columns large-5">
        Jaci Velasquez
      </div>
      <div class="columns large-5">
        Un Lugar Celestial
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:39</span>
      </div>
      <div class="columns large-5">
        Mozaiek Worship
      </div>
      <div class="columns large-5">
        Kom, Verras Ons
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:35</span>
      </div>
      <div class="columns large-5">
        Meredith Andrews
      </div>
      <div class="columns large-5">
        Take Me Back
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:29</span>
      </div>
      <div class="columns large-5">
        Casting Crowns
      </div>
      <div class="columns large-5">
        Prayer For A Friend
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:25</span>
      </div>
      <div class="columns large-5">
        Joke Buis
      </div>
      <div class="columns large-5">
        Abba Vader
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:23</span>
      </div>
      <div class="columns large-5">
        Opwekking Band met Rebekka Sahertian
      </div>
      <div class="columns large-5">
        865 Hier Zijn
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>23:00</span>
      </div>
      <div class="columns large-5">
        Paul Baloche
      </div>
      <div class="columns large-5">
        A New Hallelujah
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:54</span>
      </div>
      <div class="columns large-5">
        Lauren Daigle
      </div>
      <div class="columns large-5">
        First
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:46</span>
      </div>
      <div class="columns large-5">
        Graham Kendrick &amp;amp; Darlene Zschech
      </div>
      <div class="columns large-5">
        There Is A Hope So Sure
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:41</span>
      </div>
      <div class="columns large-5">
        Reni &amp;amp; Elisa
      </div>
      <div class="columns large-5">
        De Eer Van Uw Naam
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:37</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith
      </div>
      <div class="columns large-5">
        Great Is Thy Faithfullness
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:33</span>
      </div>
      <div class="columns large-5">
        Kinga Ban
      </div>
      <div class="columns large-5">
        Uw Vleugels Over Mij
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:25</span>
      </div>
      <div class="columns large-5">
        I Am They
      </div>
      <div class="columns large-5">
        Near To Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>22:00</span>
      </div>
      <div class="columns large-5">
        Adem Project
      </div>
      <div class="columns large-5">
        Wij Zijn Uw Kerk
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>21:47</span>
      </div>
      <div class="columns large-5">
        Mack Brock
      </div>
      <div class="columns large-5">
        Your Presence Is A Promise
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>21:43</span>
      </div>
      <div class="columns large-5">
        Amy Grant
      </div>
      <div class="columns large-5">
        El-Shaddai
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>21:30</span>
      </div>
      <div class="columns large-5">
        Opwekking Band met Reyer
      </div>
      <div class="columns large-5">
        870 Diep Geraakt
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>21:26</span>
      </div>
      <div class="columns large-5">
        Matt Redman &amp;amp; Martin Smith
      </div>
      <div class="columns large-5">
        The Heart Of Worship
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>21:24</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Ik Zal Er Zijn
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>20:43</span>
      </div>
      <div class="columns large-5">
        Kim Hill
      </div>
      <div class="columns large-5">
        Psalm 1
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>20:30</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith &amp;amp; Audrey Assad
      </div>
      <div class="columns large-5">
        Turn Your Eyes Upon Jesus
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>20:28</span>
      </div>
      <div class="columns large-5">
        Andrew Ripp
      </div>
      <div class="columns large-5">
        Fill My Cup
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>19:55</span>
      </div>
      <div class="columns large-5">
        Het Nieuw Jeruzalem (Jubilate Deo &amp;amp; Deum Fidentes)
      </div>
      <div class="columns large-5">
        Oratorium 16 Finale: Amen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>19:50</span>
      </div>
      <div class="columns large-5">
        Elise Mannah
      </div>
      <div class="columns large-5">
        Jezus Licht In De Duisternis
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>19:40</span>
      </div>
      <div class="columns large-5">
        Chr. Gem. Koor De Zeeklank olv Johan Bredewout
      </div>
      <div class="columns large-5">
        De Heer Is Mijn Herder
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>19:38</span>
      </div>
      <div class="columns large-5">
        Chr. Krimpens Mannenkoor olv Hans van Blijderveen
      </div>
      <div class="columns large-5">
        De Lichtstad
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>19:29</span>
      </div>
      <div class="columns large-5">
        Petrus In Het Land met Koor olv Betthilde Keij
      </div>
      <div class="columns large-5">
        Ga Met God En Hij Zal Met Je Zijn
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:53</span>
      </div>
      <div class="columns large-5">
        Christian Verwoerd &amp;amp; Erika de With
      </div>
      <div class="columns large-5">
        Jezus Onze Messias
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:51</span>
      </div>
      <div class="columns large-5">
        Michael W. Smith &amp;amp; Amy Grant
      </div>
      <div class="columns large-5">
        Lord Have Mercy
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:45</span>
      </div>
      <div class="columns large-5">
        Adem Project
      </div>
      <div class="columns large-5">
        Adem Van Het Leven
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:40</span>
      </div>
      <div class="columns large-5">
        Don Moen
      </div>
      <div class="columns large-5">
        God Will Make A Way
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:32</span>
      </div>
      <div class="columns large-5">
        Eline Bakker
      </div>
      <div class="columns large-5">
        Door En Door Goed
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:30</span>
      </div>
      <div class="columns large-5">
        For King &amp;amp; Country
      </div>
      <div class="columns large-5">
        Priceless
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:28</span>
      </div>
      <div class="columns large-5">
        Kees Kraayenoord &amp;amp; Kinga Ban
      </div>
      <div class="columns large-5">
        Ik Bouw Op U
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:22</span>
      </div>
      <div class="columns large-5">
        Joke Buis
      </div>
      <div class="columns large-5">
        Wat Vraagt God Van Mij
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:18</span>
      </div>
      <div class="columns large-5">
        Julie Miller
      </div>
      <div class="columns large-5">
        How Could You Say No
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:13</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Juicht Want Jezus Is Heer / Hij Is Verheerlijkt
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:09</span>
      </div>
      <div class="columns large-5">
        Lauren Daigle
      </div>
      <div class="columns large-5">
        Rescue
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>18:07</span>
      </div>
      <div class="columns large-5">
        Mensenkinderen
      </div>
      <div class="columns large-5">
        Zink Naar De Top
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:53</span>
      </div>
      <div class="columns large-5">
        Keith Green
      </div>
      <div class="columns large-5">
        Oh Lord, You&#039;re Beautiful
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:49</span>
      </div>
      <div class="columns large-5">
        The Psalm Project met Suzanne van der Velde
      </div>
      <div class="columns large-5">
        Heer Die Mij Ziet Zoals Ik Ben
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:42</span>
      </div>
      <div class="columns large-5">
        Leeland
      </div>
      <div class="columns large-5">
        Tears Of The Saints
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:36</span>
      </div>
      <div class="columns large-5">
        Helena Maria
      </div>
      <div class="columns large-5">
        Way Maker
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:32</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Dingen Die Je Doet
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:28</span>
      </div>
      <div class="columns large-5">
        Colton Dixon
      </div>
      <div class="columns large-5">
        Miracles
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:24</span>
      </div>
      <div class="columns large-5">
        Opwekking Band met Elisa Krijgsman &amp;amp; Claire
      </div>
      <div class="columns large-5">
        730 Ik Herleef
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:18</span>
      </div>
      <div class="columns large-5">
        Hillsong Worship met Taya
      </div>
      <div class="columns large-5">
        I Surrender
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:11</span>
      </div>
      <div class="columns large-5">
        LEV
      </div>
      <div class="columns large-5">
        Naast Je Lopen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>17:07</span>
      </div>
      <div class="columns large-5">
        Chris Tomlin
      </div>
      <div class="columns large-5">
        Holy Forever
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:53</span>
      </div>
      <div class="columns large-5">
        Gerald Troost
      </div>
      <div class="columns large-5">
        Thuis
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:49</span>
      </div>
      <div class="columns large-5">
        Larissa
      </div>
      <div class="columns large-5">
        Unravel Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:40</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Vreugde Van Mijn Hart
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:36</span>
      </div>
      <div class="columns large-5">
        Lou Fellingham
      </div>
      <div class="columns large-5">
        You Are My Peace
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:32</span>
      </div>
      <div class="columns large-5">
        Elise Mannah
      </div>
      <div class="columns large-5">
        Hij Kan Zomaar Naast Je Lopen
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:28</span>
      </div>
      <div class="columns large-5">
        Petra
      </div>
      <div class="columns large-5">
        Beyond Belief
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:22</span>
      </div>
      <div class="columns large-5">
        Christian Verwoerd
      </div>
      <div class="columns large-5">
        Psalm 63a
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:18</span>
      </div>
      <div class="columns large-5">
        Bethel Music
      </div>
      <div class="columns large-5">
        It Is Well
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>16:09</span>
      </div>
      <div class="columns large-5">
        Marcel &amp;amp; Lydia Zimmer
      </div>
      <div class="columns large-5">
        Til Mij Op
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:51</span>
      </div>
      <div class="columns large-5">
        Reyer, Kees Kraayenoord &amp;amp; Eline Bakker
      </div>
      <div class="columns large-5">
        Alle Glorie
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:46</span>
      </div>
      <div class="columns large-5">
        Elevation Worship
      </div>
      <div class="columns large-5">
        O Come To The Altar
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:44</span>
      </div>
      <div class="columns large-5">
        Delise &amp;amp; Lars Gerfen
      </div>
      <div class="columns large-5">
        Bij U Is Het Goed
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:36</span>
      </div>
      <div class="columns large-5">
        Ray Boltz
      </div>
      <div class="columns large-5">
        Watch The Lamb
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:32</span>
      </div>
      <div class="columns large-5">
        Matthijn Buwalda
      </div>
      <div class="columns large-5">
        Vuur
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:30</span>
      </div>
      <div class="columns large-5">
        Hillary Scott
      </div>
      <div class="columns large-5">
        You Can Rest
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:26</span>
      </div>
      <div class="columns large-5">
        Susan Ashton
      </div>
      <div class="columns large-5">
        You Move Me
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>15:22</span>
      </div>
      <div class="columns large-5">
        Kees Kraayenoord &amp;amp; Mozaiek0318
      </div>
      <div class="columns large-5">
        Feest van Genade
      </div>
    </div>
        <div class="row">
      <div class="columns large-2">
        29-12-2022 <span>14:53</span>
      </div>
      <div class="columns large-5">
        Sela
      </div>
      <div class="columns large-5">
        Gods Zegen Voor Jou
      </div>
    </div>
      </div>
</div>

                        </div>
                    </article>

                                                     </div>

                        	    </div>

    </main>


    <footer>
    	<div id="footer" class="footer">
	        <div class="row" data-equalizer data-equalize-by-row="true" data-equalize-on-stack="true">
	                <div id="gopublichtml-12" class="small-12 large-3 columns html-widget  widget" data-equalizer-watch><h2 class="sidebar--title widget--title">Nieuwsbrief</h2><div class="textwidget custom-html-widget"><script type="text/javascript"></script>
                <div class='gf_browser_unknown gform_wrapper cs_overlay_wrapper gform_legacy_markup_wrapper' id='gform_wrapper_291' ><div id='gf_291' class='gform_anchor' tabindex='-1'></div><form method='post' enctype='multipart/form-data' target='gform_ajax_frame_291' id='gform_291' class=' cs_overlay gform_legacy_markup' action='/muziek/playlist/#gf_291'  autocomplete="something-new">
                        <div class='gform_body gform-body'><ul id='gform_fields_291' class='gform_fields top_label form_sublabel_below description_below'><li id="field_291_1"  class="gfield gfield_contains_required field_sublabel_below field_description_below hidden_label gfield_visibility_visible"  data-js-reload="field_291_1"><label class='gfield_label' for='input_291_1' >E-mailadres<span class="gfield_required"><span class="gfield_required gfield_required_asterisk">*</span></span></label><div class='ginput_container ginput_container_email'>
                            <input autocomplete="something-new"  name='input_1' id='input_291_1' type='text' value='' class='large'   placeholder='E-mailadres' aria-required="true" aria-invalid="false"  />
                        </div></li><li id="field_291_2"  class="gfield gfield--width-full field_sublabel_below field_description_below gfield_visibility_hidden"  data-js-reload="field_291_2"><div class='admin-hidden-markup'><i class='gform-icon gform-icon--hidden'></i><span>Hidden</span></div><label class='gfield_label' for='input_291_2' >E-mail Nieuwsbrief</label><div class='ginput_container ginput_container_text'><input autocomplete="something-new"  name='input_2' id='input_291_2' type='text' value='Ja' class='large'      aria-invalid="false"   /> </div></li><li id="field_291_5"  class="gfield gfield--width-full field_sublabel_below field_description_below gfield_visibility_hidden"  data-js-reload="field_291_5"><div class='admin-hidden-markup'><i class='gform-icon gform-icon--hidden'></i><span>Hidden</span></div><label class='gfield_label' for='input_291_5' >Herkomst</label><div class='ginput_container ginput_container_text'><input autocomplete="something-new"  name='input_5' id='input_291_5' type='text' value='Website' class='large'      aria-invalid="false"   /> </div></li><li id="field_291_4"  class="gfield gfield--width-full field_sublabel_below field_description_below gfield_visibility_hidden"  data-js-reload="field_291_4"><div class='admin-hidden-markup'><i class='gform-icon gform-icon--hidden'></i><span>Hidden</span></div><label class='gfield_label' for='input_291_4' >SF Herkomstcampagne</label><div class='ginput_container ginput_container_text'><input autocomplete="something-new"  name='input_4' id='input_291_4' type='text' value='7013X000002JUNEQA4' class='large'      aria-invalid="false"   /> </div></li><li id="field_291_6"  class="gfield gfield--width-full field_sublabel_below field_description_below gfield_visibility_visible"  data-js-reload="field_291_6"><label class='gfield_label' for='input_291_6' >CAPTCHA</label><div id='input_291_6' class='ginput_container ginput_recaptcha' data-sitekey='6Lcgkd4hAAAAAAX5Hm-Y7pCNOcdLaFO2-eBUAsCy'  data-theme='light' data-tabindex='-1' data-size='invisible' data-badge='bottomright'></div></li><li id="field_291_7"  class="gfield gform_validation_container field_sublabel_below field_description_below gfield_visibility_visible"  data-js-reload="field_291_7"><label class='gfield_label' for='input_291_7' >Phone</label><div class='ginput_container'><input autocomplete="something-new"  name='input_7' id='input_291_7' type='text' value='' /></div><div class='gfield_description' id='gfield_description_291_7'>Dit veld is bedoeld voor validatiedoeleinden en moet niet worden gewijzigd.</div></li></ul></div>
        <div class='gform_footer top_label'> <input type='submit' id='gform_submit_button_291' class='gform_button button' value='Versturen'  onclick='if(window["gf_submitting_291"]){return false;}  window["gf_submitting_291"]=true;  ' onkeypress='if( event.keyCode == 13 ){ if(window["gf_submitting_291"]){return false;} window["gf_submitting_291"]=true;  jQuery("#gform_291").trigger("submit",[true]); }' /><div class="gp_gf_loading_div"></div> <input type='hidden' name='gform_ajax' value='form_id=291&amp;title=&amp;description=&amp;tabindex=0' />
            <input type='hidden' class='gform_hidden' name='is_submit_291' value='1' />
            <input type='hidden' class='gform_hidden' name='gform_submit' value='291' />
            
            <input type='hidden' class='gform_hidden' name='gform_unique_id' value='' />
            <input type='hidden' class='gform_hidden' name='state_291' value='WyJbXSIsIjU4ZWI2NDhmOTgxZGFjMDA1ZDAyYzMyZWU0NTVmMGNiIl0=' />
            <input type='hidden' class='gform_hidden' name='gform_target_page_number_291' id='gform_target_page_number_291' value='0' />
            <input type='hidden' class='gform_hidden' name='gform_source_page_number_291' id='gform_source_page_number_291' value='1' />
            <input type='hidden' name='gform_field_values' value='' />
            
        </div>
                        </form>
                        </div>
                <iframe style='display:none;width:0px;height:0px;' src='about:blank' name='gform_ajax_frame_291' id='gform_ajax_frame_291' title='Dit iframe bevat de vereiste logica om Ajax aangedreven Gravity Forms te verwerken.'></iframe>
                <script type="text/javascript">
gform.initializeOnLoaded( function() {gformInitSpinner( 291, 'https://www.grootnieuwsradio.nl/wp-content/plugins/campaignsuite/public/assets/images/spacer.gif' );jQuery('#gform_ajax_frame_291').on('load',function(){var contents = jQuery(this).contents().find('*').html();var is_postback = contents.indexOf('GF_AJAX_POSTBACK') >= 0;if(!is_postback){return;}var form_content = jQuery(this).contents().find('#gform_wrapper_291');var is_confirmation = jQuery(this).contents().find('#gform_confirmation_wrapper_291').length > 0;var is_redirect = contents.indexOf('gformRedirect(){') >= 0;var is_form = form_content.length > 0 && ! is_redirect && ! is_confirmation;var mt = parseInt(jQuery('html').css('margin-top'), 10) + parseInt(jQuery('body').css('margin-top'), 10) + 100;if(is_form){jQuery('#gform_wrapper_291').html(form_content.html());if(form_content.hasClass('gform_validation_error')){jQuery('#gform_wrapper_291').addClass('gform_validation_error');} else {jQuery('#gform_wrapper_291').removeClass('gform_validation_error');}setTimeout( function() { /* delay the scroll by 50 milliseconds to fix a bug in chrome */ jQuery(document).scrollTop(jQuery('#gform_wrapper_291').offset().top - mt); }, 50 );if(window['gformInitDatepicker']) {gformInitDatepicker();}if(window['gformInitPriceFields']) {gformInitPriceFields();}var current_page = jQuery('#gform_source_page_number_291').val();gformInitSpinner( 291, 'https://www.grootnieuwsradio.nl/wp-content/plugins/campaignsuite/public/assets/images/spacer.gif' );jQuery(document).trigger('gform_page_loaded', [291, current_page]);window['gf_submitting_291'] = false;}else if(!is_redirect){var confirmation_content = jQuery(this).contents().find('.GF_AJAX_POSTBACK').html();if(!confirmation_content){confirmation_content = contents;}setTimeout(function(){jQuery('#gform_wrapper_291').replaceWith(confirmation_content);jQuery(document).scrollTop(jQuery('#gf_291').offset().top - mt);jQuery(document).trigger('gform_confirmation_loaded', [291]);window['gf_submitting_291'] = false;wp.a11y.speak(jQuery('#gform_confirmation_message_291').text());}, 50);}else{jQuery('#gform_291').append(contents);if(window['gformRedirect']) {gformRedirect();}}jQuery(document).trigger('gform_post_render', [291, current_page]);} );} );
</script>


<h2 class="sidebar--title widget--title">Volg ons</h2>
<div>
        <div class="header__inline-block">
            <ul class="list-social">
                <li class="list-item">
                    <a href="https://www.facebook.com/GrootNieuwsRadio" target="_blank"><i class="fab fa-facebook-f"></i></a>
                </li>
                <li class="list-item">
                    <a href="https://twitter.com/grootnieuwsnl" target="_blank"><i class="fab fa-twitter"></i></a>
                </li>
                <li class="list-item">
                    <a href="https://www.instagram.com/grootnieuwsradio/" target="_blank"><i class="fab fa-instagram"></i></a>
                </li>
                <li class="list-item">
                    <a href="https://wa.me/31627065112" target="_blank"><i class="fab fa-whatsapp"></i></a>
                </li>

                <li class="list-item">
                    <a href="https://www.youtube.com/user/grootnieuwsradio" target="_blank"><i class="fab fa-youtube"></i></a>
                </li>
            </ul>            
        </div>
        
        </div></div></div><div id="gopublictext-7" class="small-12 large-3 columns text-widget  widget" data-equalizer-watch><h2 class="sidebar--title widget--title">Contactgegevens</h2>			<div class="textwidget"><p><strong>Adres:</strong> Zandstraat 36, 3901 CM Veenendaal</p>
<p><strong>Telefoon:</strong> 0909 123 1008 (55 ct/min). Wij kunnen je niet direct telefonisch te woord staan, maar je kunt wel een voicemail inspreken. Daarop proberen wij binnen 3 werkdagen te antwoorden.</p>
<p><strong>WhatsApp: </strong><a href="https://wa.me/31627065112">0627065112</a></p>
</div>
		</div><div id="gopublicmenufooter-2" class="small-12 large-3 columns menu-widget  widget" data-equalizer-watch><h2 class="sidebar--title widget--title">Links</h2><div class="menu-widget "><ul class="vertical "><li id="menu-item-3179" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3179"><a href="https://www.grootnieuwsradio.nl/hoe-luister-ik-groot-nieuws-radio/">Alle luisteropties</a></li>
<li id="menu-item-3178" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3178"><a href="https://www.grootnieuwsradio.nl/programmas/">Programma&#8217;s</a></li>
<li id="menu-item-2207" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2207"><a href="https://www.grootnieuwsradio.nl/contact/whatsapp-met-de-studio/">Stuur een app&#8217;je</a></li>
<li id="menu-item-17195" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-17195"><a href="https://www.grootnieuwsradio.nl/gift/?frequency=Monthly">Word vriend</a></li>
<li id="menu-item-17196" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-17196"><a href="https://www.grootnieuwsradio.nl/gift/">Geef een gift</a></li>
<li id="menu-item-2211" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2211"><a href="https://www.grootnieuwsradio.nl/adverteren/businessclub/">Businessclub</a></li>
</ul></div></div><div id="gopublictext-5" class="small-12 large-3 columns text-widget  widget" data-equalizer-watch><h2 class="sidebar--title widget--title">Download de nieuwe app!</h2>			<div class="textwidget"><p>Luister overal naar Groot Nieuws Radio met de vernieuwde app. Haal nu de app binnen op je smartphone of tablet.</p>
<div style="display: inline-block; width: 50%; float: left; padding-right: 5px;"><a href="https://itunes.apple.com/nl/app/groot-nieuws-radio/id623841303?mt=8" target="_blank" rel="noopener"><img class="lazy lazy-hidden" decoding="async" src="//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/images/lazy_placeholder.gif" data-lazy-type="image" data-src="/wp-content/uploads/2018/12/app-store.png" /><noscript><img decoding="async" src="/wp-content/uploads/2018/12/app-store.png" /></noscript></a></div>
<div style="display: inline-block; width: 50%; float: left; padding-left: 5px;"><a href="https://play.google.com/store/apps/details?id=nl.primareclame.gnr2016&amp;hl=en_US" target="_blank" rel="noopener"><img class="lazy lazy-hidden" decoding="async" src="//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/images/lazy_placeholder.gif" data-lazy-type="image" data-src="/wp-content/uploads/2018/12/playstore.png" /><noscript><img decoding="async" src="/wp-content/uploads/2018/12/playstore.png" /></noscript></a></div>
</div>
		</div><div id="gnrfooter-2" class="small-12 medium-12 large-12  footer-part columns  widget" data-equalizer-watch>
        <div class="textwidget custom-html-widget footer__bottom">
            <div class="row">
                <div class="columns small-12 large-8">
                    <div class="copyright">
                        <p class="privacy">
                            <a href="/info/over-groot-nieuws-radio/privacy/">Privacy</a> en <a href="/info/algemene-voorwaarden/">algemene voorwaarden</a>
                        </p>
                        <p class="privacy">
                        <a onclick="jQuery('#cookie-popup #more-info-button').click()" class="link">Cookies voorkeuren</a>
                        </p>
                        <p>Site by: <a href="https://www.gopublic.nl" target="_blank">Gopublic</a></p>
                    </div>
                </div>

                <div class="columns small-12 large-4">
                    <div class="logs">
                        <a href="https://www.anwb.nl/" target="_blank">
                            <img class="lazy lazy-hidden" src="//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/images/lazy_placeholder.gif" data-lazy-type="image" data-src="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/images/anwb.png" alt><noscript><img src="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/images/anwb.png" alt></noscript>
                        </a>

                        <a href="https://www.anp.nl/" target="_blank">
                            <img class="lazy lazy-hidden" src="//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/images/lazy_placeholder.gif" data-lazy-type="image" data-src="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/images/anp.png" alt><noscript><img src="https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/images/anp.png" alt></noscript>
                        </a>
                    </div>
                </div>
            </div>
        </div>


    </div>	   
	        </div>
    	</div>

    	<script src="//gnr.gopublic.nl/focus/3.js" type="text/javascript" charset="utf-8" async="async"></script><link rel='stylesheet' id='gforms_reset_css-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/legacy/css/formreset.min.css?ver=2.6.8' type='text/css' media='all' />
<link rel='stylesheet' id='gforms_formsmain_css-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/legacy/css/formsmain.min.css?ver=2.6.8' type='text/css' media='all' />
<link rel='stylesheet' id='gforms_ready_class_css-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/legacy/css/readyclass.min.css?ver=2.6.8' type='text/css' media='all' />
<link rel='stylesheet' id='gforms_browsers_css-css' href='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/legacy/css/browsers.min.css?ver=2.6.8' type='text/css' media='all' />
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/jquery/ui/core.min.js?ver=1.13.2' id='jquery-ui-core-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/jquery/ui/datepicker.min.js?ver=1.13.2' id='jquery-ui-datepicker-js'></script>
<script type='text/javascript' id='jquery-ui-datepicker-js-after'>
jQuery(function(jQuery){jQuery.datepicker.setDefaults({"closeText":"Sluiten","currentText":"Vandaag","monthNames":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],"monthNamesShort":["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"],"nextText":"Volgende","prevText":"Vorige","dayNames":["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],"dayNamesShort":["zo","ma","di","wo","do","vr","za"],"dayNamesMin":["Z","M","D","W","D","V","Z"],"dateFormat":"d MM yy","firstDay":1,"isRTL":false});});
</script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme/assets/base/js/app.js' id='app-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme-child/assets/base/js/app.js?ver=1.19.9' id='gopublic-child-motor-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/themes/gopublic-motor-theme/assets/base/js/foundation.min.js' id='foundation-js'></script>
<script type='text/javascript' id='wp_mailjet_subscribe_widget-front-script-js-extra'>
/* <![CDATA[ */
var mjWidget = {"ajax_url":"https:\/\/www.grootnieuwsradio.nl\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-content/plugins/mailjet-for-wordpress/src/widget/js/front-widget.js?ver=62cb62b7e1fbe93521a2d9bb0381db26' id='wp_mailjet_subscribe_widget-front-script-js'></script>
<script type='text/javascript' id='jquery-lazyloadxt-js-extra'>
/* <![CDATA[ */
var a3_lazyload_params = {"apply_images":"1","apply_videos":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/js/jquery.lazyloadxt.extra.min.js?ver=2.6.1' id='jquery-lazyloadxt-js'></script>
<script type='text/javascript' src='//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/js/jquery.lazyloadxt.srcset.min.js?ver=2.6.1' id='jquery-lazyloadxt-srcset-js'></script>
<script type='text/javascript' id='jquery-lazyloadxt-extend-js-extra'>
/* <![CDATA[ */
var a3_lazyload_extend_params = {"edgeY":"0","horizontal_container_classnames":""};
/* ]]> */
</script>
<script type='text/javascript' src='//www.grootnieuwsradio.nl/wp-content/plugins/a3-lazy-load/assets/js/jquery.lazyloadxt.extend.js?ver=2.6.1' id='jquery-lazyloadxt-extend-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/dist/vendor/regenerator-runtime.min.js?ver=0.13.9' id='regenerator-runtime-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/dist/vendor/wp-polyfill.min.js?ver=3.15.0' id='wp-polyfill-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/dist/dom-ready.min.js?ver=392bdd43726760d1f3ca' id='wp-dom-ready-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/dist/hooks.min.js?ver=4169d3cf8e8d95a3d6d5' id='wp-hooks-js'></script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/dist/i18n.min.js?ver=9e794f35a71bb98672ae' id='wp-i18n-js'></script>
<script type='text/javascript' id='wp-i18n-js-after'>
wp.i18n.setLocaleData( { 'text direction\u0004ltr': [ 'ltr' ] } );
</script>
<script type='text/javascript' id='wp-a11y-js-translations'>
( function( domain, translations ) {
	var localeData = translations.locale_data[ domain ] || translations.locale_data.messages;
	localeData[""].domain = domain;
	wp.i18n.setLocaleData( localeData, domain );
} )( "default", {"translation-revision-date":"2022-11-07 11:49:00+0000","generator":"GlotPress\/4.0.0-alpha.3","domain":"messages","locale_data":{"messages":{"":{"domain":"messages","plural-forms":"nplurals=2; plural=n != 1;","lang":"nl"},"Notifications":["Meldingen"]}},"comment":{"reference":"wp-includes\/js\/dist\/a11y.js"}} );
</script>
<script type='text/javascript' src='https://www.grootnieuwsradio.nl/wp-includes/js/dist/a11y.min.js?ver=ecce20f002eda4c19664' id='wp-a11y-js'></script>
<script type='text/javascript' defer='defer' src='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/js/jquery.json.min.js?ver=2.6.8' id='gform_json-js'></script>
<script type='text/javascript' id='gform_gravityforms-js-extra'>
/* <![CDATA[ */
var gform_i18n = {"datepicker":{"days":{"monday":"Ma","tuesday":"Di","wednesday":"Woe","thursday":"Do","friday":"Vrij","saturday":"Za","sunday":"Zo"},"months":{"january":"Januari","february":"Februari","march":"Maart","april":"April","may":"Mei","june":"Juni","july":"Juli","august":"Augustus","september":"September","october":"Oktober","november":"November","december":"December"},"firstDay":1,"iconText":"Selecteer een datum"}};
var gf_legacy_multi = [];
var gform_gravityforms = {"strings":{"invalid_file_extension":"Dit bestandstype is niet toegestaan. Moet \u00e9\u00e9n van de volgende zijn:","delete_file":"Dit bestand verwijderen","in_progress":"in behandeling","file_exceeds_limit":"Bestand overschrijdt limiet bestandsgrootte","illegal_extension":"Dit type bestand is niet toegestaan.","max_reached":"Maximale aantal bestanden bereikt","unknown_error":"Er was een probleem bij het opslaan van het bestand op de server","currently_uploading":"Wacht tot het uploaden is voltooid","cancel":"Annuleren","cancel_upload":"Deze upload annuleren","cancelled":"Geannuleerd"},"vars":{"images_url":"https:\/\/www.grootnieuwsradio.nl\/wp-content\/plugins\/gravityforms\/images"}};
var gf_global = {"gf_currency_config":{"name":"Euro","symbol_left":"","symbol_right":"&#8364;","symbol_padding":" ","thousand_separator":".","decimal_separator":",","decimals":2,"code":"EUR"},"base_url":"https:\/\/www.grootnieuwsradio.nl\/wp-content\/plugins\/gravityforms","number_formats":[],"spinnerUrl":"https:\/\/www.grootnieuwsradio.nl\/wp-content\/plugins\/gravityforms\/images\/spinner.svg","strings":{"newRowAdded":"Nieuwe rij toegevoegd.","rowRemoved":"Rij verwijderd","formSaved":"Het formulier is opgeslagen. De inhoud bevat de link om terug te keren en het formulier in te vullen."}};
/* ]]> */
</script>
<script type='text/javascript' defer='defer' src='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/js/gravityforms.min.js?ver=2.6.8' id='gform_gravityforms-js'></script>
<script type='text/javascript' defer='defer' src='https://www.google.com/recaptcha/api.js?hl=en&#038;ver=62cb62b7e1fbe93521a2d9bb0381db26#038;render=explicit' id='gform_recaptcha-js'></script>
<script type='text/javascript' defer='defer' src='https://www.grootnieuwsradio.nl/wp-content/plugins/gravityforms/js/placeholders.jquery.min.js?ver=2.6.8' id='gform_placeholder-js'></script>
<script type="text/javascript">
gform.initializeOnLoaded( function() { jQuery(document).on('gform_post_render', function(event, formId, currentPage){if(formId == 291) {if(typeof Placeholders != 'undefined'){
                        Placeholders.enable();
                    }} } );jQuery(document).bind('gform_post_conditional_logic', function(event, formId, fields, isInit){} ) } );
</script>
<script type="text/javascript">
gform.initializeOnLoaded( function() { jQuery(document).trigger('gform_post_render', [291, 1]) } );
</script>

    </footer>
</body>
</html>
  recorded_at: Fri, 30 Dec 2022 13:53:17 GMT
recorded_with: VCR 6.1.0
