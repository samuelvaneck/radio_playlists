---
http_interactions:
- request:
    method: get
    uri: https://www.grootnieuwsradio.nl/muziek/playlist
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Fri, 24 Dec 2021 08:18:02 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - origin, x-requested-with, content-type
      Access-Control-Allow-Methods:
      - PUT, GET, POST, DELETE, OPTIONS
      Vary:
      - Accept-Encoding,Cookie
      Expires:
      - Fri, 24 Dec 2021 09:18:02 GMT
      Cache-Control:
      - max-age=3600
      X-Redirect-By:
      - WordPress
      Location:
      - https://www.grootnieuwsradio.nl/muziek/playlist/
      Content-Length:
      - '49'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: UTF-8
      string: "<!-- simplehtmldom failed to process the html -->"
  recorded_at: Fri, 24 Dec 2021 08:18:02 GMT
- request:
    method: get
    uri: https://www.grootnieuwsradio.nl/muziek/playlist/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 24 Dec 2021 08:18:02 GMT
      Server:
      - Apache/2.4.41 (Ubuntu)
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - origin, x-requested-with, content-type
      Access-Control-Allow-Methods:
      - PUT, GET, POST, DELETE, OPTIONS
      Vary:
      - Accept-Encoding,Cookie
      Link:
      - "<https://www.grootnieuwsradio.nl/?p=16005>; rel=shortlink"
      - <https://www.grootnieuwsradio.nl/wp-json/>; rel="https://api.w.org/"
      - <https://www.grootnieuwsradio.nl/wp-json/wp/v2/pages/16005>; rel="alternate";
        type="application/json"
      Content-Length:
      - '21107'
      Content-Type:
      - text/html; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 Dec 2021 08:18:03 GMT
recorded_with: VCR 6.0.0
